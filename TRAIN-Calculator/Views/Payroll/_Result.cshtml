@model TRAIN_Calculator.ViewModels.PayrollViewModel
@{
    Dictionary<byte, string> compensationDropdownList = (ViewBag.CompensationDropdownList != null) ? (Dictionary<byte, string>)ViewBag.CompensationDropdownList : new Dictionary<byte, string>();
    Dictionary<byte, string> deMinimisDropdownList = (ViewBag.DeMinimisDropdownList != null) ? (Dictionary<byte, string>)ViewBag.DeMinimisDropdownList : new Dictionary<byte, string>();
    Dictionary<byte, string> deductionDropdownList = (ViewBag.DeductionDropdownList != null) ? (Dictionary<byte, string>)ViewBag.DeductionDropdownList : new Dictionary<byte, string>();
}

<head>
    <style type="text/css">
        table.borderless td, table.borderless th {
            border: none !important;
            padding-top: 3px !important;
            padding-bottom: 2px !important;
        }

        .td-value {
            text-align: right;
        }
    </style>


</head>



<div class="container">

    <div class="row" style="margin-top:20px;">
        <p>
            <i>Bulletin: The calculator only covers non-government employees’ monthly related calculations. Other scenarios will be added according to our public timeline.</i>
        </p>
        <hr />
    </div>

    <div class="row">
        <div class="col-md-6">
            <div class="container">
                <div class="row text-center">
                    <h4 style="text-align:center;font-size:2em;font-weight:bold;display:inline">
                        <span>Compensation</span>
                    </h4>
                    <div class="button-dropdown-custom">
                        <button type="button" class="form-blank-input button-dropdown-custom">
                            <span class="glyphicon glyphicon-plus-sign" style="color:#CFA700;font-size:2em"></span>
                        </button>

                        <div class="button-dropdown-custom-content" style="right:0px;">
                            @foreach (var item in compensationDropdownList)
                            {
                                <a class="button-dropdown-custom-item" data-value="@item.Key" data-text="@item.Value" onclick="addCompensation(this)">@item.Value</a>
                            }
                            @foreach (var item in deMinimisDropdownList)
                            {
                                <a class="button-dropdown-custom-item" data-value="@item.Key" data-text="@item.Value" onclick="addDeMinimis(this)">@item.Value</a>
                            }
                        </div>
                    </div>
                </div>

                <table id="compensations-table" class="table borderless table-custom-calculator">
                    <tbody>
                        @for (int i = 0; i < Model.Compensations.Count; i++)
                        {
                            var item = Model.Compensations[i];
                            <tr>
                                <td>
                                    <input class="compensations-table-item-key" type="hidden" name="Compensations[@i].Compensation" value="@((int)item.Compensation)" />
                                    <button type="button" class="form-blank-input" onclick="removeCalculatorTableItem(this)">
                                        <span class="glyphicon glyphicon-minus-sign"></span>
                                    </button>
                                </td>
                                <td>
                                    <label>@item.Compensation.GetDisplayName()</label>
                                </td>
                                <td>
                                    <img src="~/Icons/tooltipicon.png" class="tooltip-custom" data-toggle="tooltip" data-tooltip-table="0" data-tooltip-item="@((byte)item.Compensation)" />
                                </td>
                                <td class="td-value">
                                    <input class="compensations-table-item-value" type="number" name="Compensations[@i].Value" value="@item.Value.ToString("#0.00")" />
                                </td>
                            </tr>
                        }

                        @for (int i = 0; i < Model.DeMinimis.Count; i++)
                        {
                            var item = Model.DeMinimis[i];
                            <tr>
                                <td>
                                    <input class="deminimis-table-item-key" type="hidden" name="DeMinimis[@i].DeMinimis" value="@((int)item.DeMinimis)" />
                                    <button type="button" class="form-blank-input" onclick="removeCalculatorTableItem(this)">
                                        <span class="glyphicon glyphicon-minus-sign"></span>
                                    </button>
                                </td>
                                <td>
                                    <label>@item.DeMinimis.GetDisplayName()</label>
                                </td>
                                <td>
                                    <img src="~/Icons/tooltipicon.png" class="tooltip-custom" data-toggle="tooltip" data-tooltip-table="1" data-tooltip-item="@((byte)item.DeMinimis)" /><img src="../Icons/tax-shield-icon.png" class="tooltip-custom" data-toggle="tooltip" title="A list of non-taxable benefits provided by BIR. Each De Minimis Benefit has limitations set by BIR, anything excess to the limit will be automatically added as Compensation which is subject to taxation" />
                                </td>
                                <td class="td-value">
                                    <input class="deminimis-table-item-value" type="number" name="DeMinimis[@i].Value" value="@item.Value.ToString("#0.00")" />
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>

        <div class="col-md-6">
            <div class="container">
                <div class="row text-center">
                    <h4 style="text-align:center;font-size:2em;font-weight:bold;display:inline">
                        <span>Deduction</span>
                    </h4>
                    <div class="button-dropdown-custom">
                        <button type="button" class="form-blank-input button-dropdown-custom">
                            <span class="glyphicon glyphicon-plus-sign" style="color:#CFA700;font-size:2em"></span>
                        </button>
                        <div class="button-dropdown-custom-content" style="right:0px;">
                            @foreach (var item in deductionDropdownList)
                            {
                                <a class="button-dropdown-custom-item" data-value="@item.Key" data-text="@item.Value" onclick="addDeduction(this)">@item.Value</a>
                            }
                        </div>
                    </div>
                </div>

                <table id="deductions-table" class="table borderless table-custom-calculator">
                    <tbody>
                        @for (int i = 0; i < Model.Deductions.Count; i++)
                        {
                            var item = Model.Deductions[i];
                            <tr>
                                <td>
                                    <input class="deductions-table-item-key" type="hidden" name="Deduction[@i].Deduction" value="@((int)item.Deduction)" />
                                    <button type="button" class="form-blank-input" onclick="removeCalculatorTableItem(this)">
                                        <span class="glyphicon glyphicon-minus-sign"></span>
                                    </button>
                                </td>
                                <td>
                                    <label>@item.Deduction.GetDisplayName()</label>
                                </td>
                                <td>
                                    <img src="~/Icons/tooltipicon.png" class="tooltip-custom" data-toggle="tooltip" data-tooltip-table="2" data-tooltip-item="@((byte)item.Deduction)" />
                                </td>
                                <td class="td-value">
                                    <input class="deductions-table-item-value" type="number" name="Deduction[@i].Value" value="@item.Value.ToString("#0.00")" />
                                </td>
                            </tr>

                           

                        }
                    </tbody>
                </table>
            </div>
        </div>

    </div>

    <div class="row">
        <hr />

        <div class="col-md-8 col-md-offset-2">

            <div class="container">
                <div class="row">
                    <h4 style="text-align:center;font-size:2em;font-weight:bold;">Summary</h4>
                </div>

                <div class="row">

                    <table class="table borderless table-custom-calculator">
                        <tbody>
                            <tr>
                                <td>
                                    Compensation
                                    @*<i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="Total Compensation is the total of all the items Taxable Compensations PLUS Excess of De Minimis"></i>*@
                                    <i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="Compensation = Expected Pay + Overtime Pay + Bonus + Commission + Allowance"></i>
                                </td>
                                <td class="td-value">@Model.PaySlips.TotalCompensations.ToString("#,#0.00")</td>
                            </tr>
                            <tr>
                                <td>
                                    De Minimis
                                    @*<i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="The De Minimis is the total of all De Minimis benefits, a list of non-taxable benefits provided by BIR"></i>*@
                                    <i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="The De Minimis is the total of all De Minimis benefits, a list of non-taxable benefits provided by BIR"></i>
                                </td>
                                <td class="td-value">@Model.PaySlips.TotalDeMinimis.ToString("#,#0.00")</td>
                            </tr>
                            <tr>
                                <td>
                                    Total Deductions
                                    @*<i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="Total Deduction is the total of all government contributions and responsibilities of the employee such as loans."></i>*@
                                    <i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="The total government contributions and obligation payments by the employee."></i>
                                </td>
                                <td class="td-value">@Model.PaySlips.TotalDeductions.ToString("#,#0.00")</td>
                            </tr>
                            <tr>
                                <td>
                                    Taxable Income
                                    <i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="Taxable Income = Compensation - Deductions"></i>
                                </td>
                                <td class="td-value">@Model.PaySlips.TaxableIncome.ToString("#,#0.00")</td>
                            </tr>
                            <tr>
                                <td>
                                    WithHolding Tax
                                    <i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="Withholding Tax rate based on the Compensation Level"></i>
                                </td>
                                <td class="td-value">@Model.PaySlips.WithHoldingTax.ToString("#,#0.00")</td>
                            </tr>
                            <tr>
                                <td>
                                    Take Home Pay
                                    <i class="fas fa-info-circle" style="display:inline-block; color: #CFA700; margin-left:4px;" data-toggle="tooltip" data-placement="right" title="Take Home Pay = Total Compensation + De Minimis - Tax"></i>
                                </td>
                                <td class="td-value">@Model.PaySlips.TakeHomePay.ToString("#,#0.00")</td>
                            </tr>
                        </tbody>
                    </table>

                </div>
            </div>
        </div>

    </div>

</div>
