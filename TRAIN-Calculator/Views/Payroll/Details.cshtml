@model TRAIN_Calculator.ViewModels.PayrollViewModel


@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2></h2>
@using (Html.BeginForm("Calculate", "Payroll", FormMethod.Post, new { id = "calculator-form" }))
{
    <div class="container">

        <div class="row">
            <div class="col-md-4" id="calculate-partial-view">
                @Html.Partial("_Calculate", Model)

                
            </div>

            <div class="col-md-8">

                @*<div class="row">
                    <div class="col-md-12" id="results-partial-view">
                        @Html.Partial("_AddParticulars", Model)
                    </div>
                </div>*@

                <div class="row">
                    <div class="col-md-12" id="results-partial-view">
                        @Html.Partial("_Result", Model)
                    </div>
                </div>

            </div>

        </div>

    </div>
}



@section scripts{

<script>

    function removeCalculatorTableItem(element) {
        $(element).parent().parent().remove();
        reorderCompensation();
        reorderDeduction();
    }

    function reorderCompensation() {
        var index = 0;
        $('.compensations-table-item-key').each(function () {
            $(this).attr('name', 'Compensations[' + index + '].Compensation');
            index++;
        })

        var index = 0;
        $('.compensations-table-item-value').each(function () {
            $(this).attr('name', 'Compensations[' + index + '].Value');
            index++;
        })
    }

    function addCompensation(element) {
        var html = $('<tr></tr>').append($('<td></td>')
                                        .append($('<input/>', { class: 'compensations-table-item-key', type: 'hidden', name: 'Compensations[0].Compensation', value: element.dataset.value }))
                                        .append($('<button></button>', { class: 'form-blank-input', onclick: 'removeCalculatorTableItem(this)' })
                                            .append($('<span></span>', { class: 'glyphicon glyphicon-minus-sign' })))
                                        .append(element.dataset.text))
                                    .append($('<td></td>')
                                        .append($('<input />', { class: 'compensations-table-item-value', type: 'number', name: 'Compensations[0].Value', value: '0.00' })));
        $('#compensations-table > tbody').append(html);
        reorderCompensation();
    }

    function reorderDeduction() {
        var index = 0;
        $('.deductions-table-item-key').each(function () {
            $(this).attr('name', 'Deductions[' + index + '].Deduction');
            index++;
        })

        var index = 0;
        $('.deductions-table-item-value').each(function () {
            $(this).attr('name', 'Deductions[' + index + '].Value');
            index++;
        })
    }

    function addDeduction(element) {
        var html = $('<tr></tr>').append($('<td></td>')
                                        .append($('<input/>', { class: 'deductions-table-item-key', type: 'hidden', name: 'Deductions[0].Deduction', value: element.dataset.value }))
                                        .append($('<button></button>', { class: 'form-blank-input', onclick: 'removeCalculatorTableItem(this)' })
                                            .append($('<span></span>', { class: 'glyphicon glyphicon-minus-sign' })))
                                        .append(element.dataset.text))
                                    .append($('<td></td>')
                                        .append($('<input />', { class: 'deductions-table-item-value', type: 'number', name: 'Deductions[0].Value', value: '0.00' })));
        $('#deductions-table > tbody').append(html);
        reorderDeduction();
    }

</script>

    @*<script type="text/javascript">

        $(function () {
            $('[data-toggle="tooltip"]').tooltip()
        })


        $(document).ready(function () {
            LoadParticulars();
        });


        $(document).on("click", ".btnRemove", function () {

            $(this).closest('dd').addClass("hide");
            $("#" + $(this).closest("dd").attr("id") + " input").val("0.00")
            $("#" + $(this).closest("dd").attr("id") + " input").removeClass("input-validation-error");

            
            return false;

        });

        $(document).on("change", ".DDL_CompensationList, .DDL_DeductionList, .DDL_DeMinimis", function () {

            var prop = $("option:selected", this).text().split(' ').join('');
            $("#" + prop + "").removeClass("hide");
            $(this).val("");
            return false;

        });


   

        function LoadParticulars() {

            var ctr = $("dl.list-group").length;

            for (var xRow = 0; xRow < ctr; xRow++) {
                {
                    var id = $(`dl.list-group:eq(${xRow})`).attr("id");

                    var len = $(`dl#${id}.list-group dd input`).length;

                    for (var row = 0; row < len; row++) {
                        if ($(`dl#${id}.list-group dd input:eq(${row})`).val() != 0) {
                            $(`dl#${id}.list-group dd:eq(${row})`).removeClass("hide")
                        }
                        
                        if ($(`dl#${id}.list-group dd input:eq(${row})`).hasClass("input-validation-error") == true) {
                            $(`dl#${id}.list-group dd:eq(${row})`).removeClass("hide")
                        }

                    }
                }
            }
        }


    </script>*@
}
